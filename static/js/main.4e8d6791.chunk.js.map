{"version":3,"sources":["FireBase.js","Page.js","QRCodeData.js","App.js","reportWebVitals.js","index.js"],"names":["db","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","getFirestore","Page","props","ref","useRef","useState","name","setName","mobile","setMobile","url","setUrl","description","setDescription","isDataSaved","setIsDataSaved","onButtonClick","useCallback","current","toPng","cacheBust","then","dataUrl","link","document","createElement","download","href","click","catch","err","console","log","class","for","type","value","onChange","event","target","placeholder","rows","className","onClick","tableName","data","Name","MobileNo","URL","Description","addDoc","collection","response","alert","title","style","backgroundColor","padding","width","QRCodeData","App","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.4e8d6791.chunk.js","sourcesContent":["import { initializeApp } from \"firebase/app\" \r\nimport { getFirestore } from \"firebase/firestore\"\r\nimport { collection, addDoc } from \"firebase/firestore\"; \r\n \r\nconst firebaseApp = initializeApp({\r\n    apiKey: \"AIzaSyAmJiBO5KdrcDmwQrpHqAwAF7eFMX5f4Bw\",\r\n    authDomain: \"sample-8555.firebaseapp.com\",\r\n    projectId: \"sample-8555\",\r\n    storageBucket: \"sample-8555.appspot.com\",\r\n    messagingSenderId: \"134869573571\",\r\n    appId: \"1:134869573571:web:580c18b100323edeb7a776\",\r\n    measurementId: \"G-MGCVBEX2J8\"\r\n  });\r\n\r\nconst db = getFirestore(); \r\n\r\nexport const  AddDataToFireStore= (tableName, data) => {\r\n return addDoc(collection(db, tableName), data);\r\n }","import React, {useState} from 'react';\r\nimport {AddDataToFireStore} from './FireBase';\r\nimport QRCode from \"react-qr-code\";\r\nimport  { useCallback, useRef } from 'react';\r\nimport { toPng } from 'html-to-image';\r\n\r\n/**\r\n* @author\r\n* @function Page\r\n**/\r\n\r\nexport const Page = (props) => {\r\n  const ref = useRef(null)\r\n \r\nconst [name,setName] = useState('');\r\nconst [mobile,setMobile] = useState('');\r\nconst [url,setUrl] = useState('');\r\nconst [description,setDescription] = useState('');\r\nconst [isDataSaved,setIsDataSaved] = useState(false);\r\n\r\nconst addData =()=>{\r\n\r\n   var saveBarCode={\r\n     Name : name,\r\n     MobileNo : mobile,\r\n     URL : url,\r\n     Description : description\r\n   }\r\n\r\n  if(name != '' && mobile !='' )\r\n  {\r\n    AddDataToFireStore('barcode',saveBarCode).then(response => {\r\n      alert(\"Data saved Successfully\")\r\n      setIsDataSaved(true);\r\n    });\r\n  }\r\n  else{\r\n    alert(\"Enter Name & mobile number\")\r\n  }\r\n}\r\n\r\nconst onButtonClick = useCallback(() => {\r\n  if (ref.current === null) {\r\n    return\r\n  }\r\n\r\n  toPng(ref.current, { cacheBust: true, })\r\n    .then((dataUrl) => {\r\n      const link = document.createElement('a')\r\n      link.download = 'my-image-name.png'\r\n      link.href = dataUrl\r\n      link.click()\r\n    })\r\n    .catch((err) => {\r\n      console.log(err)\r\n    })\r\n}, [ref])\r\n\r\n const clear =() =>{\r\n  setName('')\r\n  setMobile('')\r\n  setUrl('')\r\n  setDescription('')\r\n }\r\n\r\n  return(\r\n    <div>\r\n\r\n<div class=\"container\">\r\n  \r\n  {isDataSaved === false &&\r\n  <form>\r\n  <h2>CREATE YOUR QR CODE</h2>\r\n  <div class=\"form-group\">\r\n            <label for=\"usr\">Name:</label>\r\n            <input type=\"text\" class=\"form-control\" value={name} onChange={(event)=> setName(event.target.value)} placeholder=\"Name\"/>\r\n          </div>\r\n\r\n          <div class=\"form-group\">\r\n            <label for=\"usr\">Mobile No:</label>\r\n            <input type=\"text\" class=\"form-control\"  value={mobile} onChange={(event)=> setMobile(event.target.value)} placeholder=\"mobile number\"></input>\r\n        \r\n          </div>\r\n\r\n          <div class=\"form-group\">\r\n            <label for=\"usr\">Redirect URL:</label>\r\n            <input type=\"text\" class=\"form-control\" value={url} onChange={(event)=> setUrl(event.target.value)}  placeholder=\"Redirect URL\"></input>\r\n        \r\n          </div>\r\n\r\n          <div class=\"form-group\">\r\n            <label for=\"usr\">Description:</label>\r\n            <textarea type=\"text\" class=\"form-control\"  rows=\"3\" value={description} onChange={(event)=> setDescription(event.target.value)} placeholder=\"Description\"></textarea>\r\n            \r\n          </div> \r\n          <hr/>\r\n          <div className=\"button\">\r\n            <button type=\"button\" class=\"btn btn-primary\" onClick={addData} title=\"Save\">SAVE</button>\r\n            <button type=\"button\" class=\"btn btn-default\" onClick={clear} title=\"Clear\">CLEAR</button>   \r\n          </div>  \r\n  </form>\r\n}\r\n{isDataSaved === true &&\r\n       <div> \r\n         <h2>QR CODE DETAILS: </h2>\r\n        <label>Name:{name}</label><br/>\r\n        <label>Mobile No:{mobile}</label><br/>  \r\n        <label>URL:{url}</label><br/>\r\n        <label>Description:{description}</label><br/><br/><br/>\r\n        <div  ref={ref} style={{backgroundColor: 'white', padding:10, width: 276}}>\r\n           <QRCode value={\"https://mohanshiva93.github.io/qrcode/qrdata\" + mobile} />\r\n        </div>\r\n        <br></br>\r\n        <button type=\"button\" class=\"btn btn-default\" onClick={() => {setIsDataSaved(false)}} title=\"Clear\">Back</button>   \r\n        <button type=\"button\" class=\"btn btn-primary\" onClick={onButtonClick} title=\"Download QR\">Download QR</button> \r\n       \r\n      </div>\r\n      }\r\n</div>\r\n      \r\n </div>\r\n   )\r\n\r\n }","import React from 'react'\r\n\r\n/**\r\n* @author\r\n* @function \r\n**/\r\n\r\nexport const  QRCodeData= (props) => {\r\n  return(\r\n    <div>Its Working</div>\r\n   )\r\n\r\n }","import React from 'react';\nimport {Page} from './Page'\nimport {QRCodeData} from './QRCodeData'\nimport OutsideAlerter from './Details'\nimport './style.css'\nimport {Route,Switch, BrowserRouter} from 'react-router-dom';\n\nfunction App() { \n  return (\n    <div>\n      <BrowserRouter>\n          <Switch>\n          <Route exact path='/' component={Page}></Route>\n            <Route exact path='qrcode/' component={Page}></Route>\n            <Route exact path='qrcode/qrdata' component={QRCodeData}></Route>            \n          </Switch>\n        </BrowserRouter> \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}